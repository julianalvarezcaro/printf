.TH man 3 "21 Jul 2020" "1.0" "_printf man page"
.SH NAME
_printf - formatted output conversion 
.SH SYNOPSIS
.B #include <stdlib.h>
.br
.B #include <stdarg.h>
.br
.B #include <unistd.h>

int _printf(const char *format, ...);

.SH DESCRIPTION
.PP
.RI "_printf writes output to the standard output stream, " "stdout" "."
.PP
.RIB "This function produces output according to the " "format" "" ", that is a string that specifies how subsequent arguments (or arguments accesses via the variable-lenght argument of " "" "stdarg(3)" ")) are converted for output."
.br
.B Format of the format string
.PP
.RI "The format string is composed of zero or more directives: ordinary characters (not %), which are copied unchaged to the output stream; and conversion specifications, each of which results in fetching zero or more subsequent arguments. Each conversion specification is introduced by the character %, and ends with a " "conversion specifier" "."
.br
.B Conversion specifiers
A character that specifies the tpe of the conversion to be applied. The conversion specifiers and their meanings are:
.br
.br
.B d, i
.RS
.RI "The " "int " "argument is converted to signed decimal notation."
.RE
.br
.B c
.RS
.RI "The " "int " "argument is converted to and " "unsigned char" ", and the resulting character is written."
.RE
.br
.B i
.RS
.RI "The " "const char *" "argument is expected to be a pointer to an array of character type (pointer to a string). Characters from the array are writte up to (but not including) a terminating null byte ('\0'.)"
.RE
.SH RETURN VALUE
This function prints the number of characters printed (excluding the null byte used to end output to strings).
.SH SEE ALSO
.I No supe cual poner aqui :v
.SH BUGS
No known bugs.
.SH AUTHOR
Jiseth Peña and Julián Álvarez.
